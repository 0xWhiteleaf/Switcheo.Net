using CryptoExchange.Net.Converters;
using Newtonsoft.Json;
using Switcheo.Net.Converters;
using System;

namespace Switcheo.Net.Objects
{
    /// <summary>
    /// Information about a fill
    /// When an <see cref="SwitcheoOrder"/> is created, the order matching engine will match the order against existing offers
    /// If any matching offers are found, then <see cref="SwitcheoFill"/> are created. These <see cref="SwitcheoFill"/> represent the filling of the order by the matching offers
    /// </summary>
    public class SwitcheoFill
    {
        /// <summary>
        /// The fill id generated by Switcheo
        /// </summary>
        [JsonProperty("id")]
        public Guid Id { get; set; }

        /// <summary>
        /// The offer hash
        /// </summary>
        [JsonProperty("offer_hash")]
        public string OfferHash { get; set; }

        /// <summary>
        /// Asset of the token that the order maker is offering
        /// </summary>
        [JsonProperty("offer_asset_id")]
        [JsonConverter(typeof(SupportedAssetConverter), true)]
        public SupportedAsset OfferAsset { get; set; }

        /// <summary>
        /// Asset of the token that the order maker wants
        /// </summary>
        [JsonProperty("want_asset_id")]
        [JsonConverter(typeof(SupportedAssetConverter), true)]
        public SupportedAsset WantAsset { get; set; }

        /// <summary>
        /// Amount of tokens that the target offer wants
        /// </summary>
        [JsonProperty("fill_amount")]
        [JsonConverter(typeof(NeoAssetAmountConverter))]
        public decimal FillAmount { get; set; }

        /// <summary>
        /// Amount of tokens that is being taken from the target offer
        /// </summary>
        [JsonProperty("want_amount")]
        [JsonConverter(typeof(NeoAssetAmountConverter))]
        public decimal WantAmount { get; set; }

        /// <summary>
        /// Amount of tokens that is given to the target offer
        /// </summary>
        [JsonProperty("filled_amount")]
        [JsonConverter(typeof(NeoAssetAmountConverter))]
        public decimal FilledAmount { get; set; }

        /// <summary>
        /// Asset of the token used for fees
        /// </summary>
        [JsonProperty("fee_asset_id")]
        [JsonConverter(typeof(SupportedAssetConverter), true)]
        public SupportedAsset FeeAsset { get; set; }

        /// <summary>
        /// Amount of fees paid for the fill
        /// </summary>
        [JsonProperty("fee_amount")]
        [JsonConverter(typeof(NeoAssetAmountConverter))]
        public decimal FeeAmount { get; set; }

        /// <summary>
        /// The buy or sell price of order
        /// </summary>
        [JsonProperty("price")]
        public decimal Price { get; set; }

        /// <summary>
        /// The transaction representing this fill
        /// </summary>
        [JsonProperty("txn")]
        public SwitcheoTransaction Transaction { get; set; }

        /// <summary>
        /// Status of the fill
        /// </summary>
        [JsonProperty("status")]
        [JsonConverter(typeof(FillStatusConverter))]
        public FillStatus Status { get; set; }

        /// <summary>
        /// Time when the fill was created
        /// </summary>
        [JsonProperty("created_at")]
        [JsonConverter(typeof(UTCDateTimeConverter))]
        public DateTime CreatedAt { get; set; }

        /// <summary>
        /// Transaction hash of the transaction representing this fill
        /// </summary>
        [JsonProperty("transaction_hash")]
        public string TransactionHash { get; set; }

        public override string ToString()
        {
            return string.Format("{{ Id : {0}, OfferHash : {1}, OfferAsset : {2}, WantAsset : {3}, FillAmount : {4}, WantAmount : {5}, FilledAmount : {6}, FeeAsset : {7}, FeeAmount : {8}, Price : {9}, Transaction : {10}, Status : {11}, CreatedAt : {12}, TransactionHash : {13} }}",
                this.Id.ToString(), this.OfferHash, this.OfferAsset.ToString(), this.WantAsset.ToString(), this.FillAmount, this.WantAmount, this.FilledAmount,
                this.FeeAsset, this.FeeAmount, this.Price,
                this.Transaction != null ? this.Transaction.ToString() : "null",
                this.Status, this.CreatedAt, this.TransactionHash);
        }
    }
}
